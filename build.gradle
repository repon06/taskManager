plugins {
    id 'java'
}

version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.github.openfeign:feign-jackson:13.5'
    implementation 'io.rest-assured:json-schema-validator:5.5.0'
    implementation 'org.java-websocket:Java-WebSocket:1.5.7'
    implementation 'org.apache.commons:commons-configuration2:2.11.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.2'
    implementation 'commons-beanutils:commons-beanutils:1.9.4'
    implementation 'org.testcontainers:testcontainers:1.20.4'

    compileOnly 'org.projectlombok:lombok:1.18.36'

    annotationProcessor 'org.projectlombok:lombok:1.18.36'

    testImplementation 'org.testcontainers:junit-jupiter:1.20.4'
    testImplementation 'io.qameta.allure:allure-junit5:2.29.0'
    testImplementation 'io.rest-assured:rest-assured:5.5.0'
    testImplementation 'io.qameta.allure:allure-rest-assured:2.13.8'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.11.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.11.3'
}

tasks.named('test') {
    doFirst {
        if (project.hasProperty('cleanAllure') && project.cleanAllure.toBoolean()) {
            def allureResultsDir = file("${projectDir}/allure-results")
            if (allureResultsDir.exists()) {
                delete allureResultsDir
                println "Deleted existing allure-results directory as cleanAllure is true."
            }
        } else {
            println "Skipped deletion of allure-results directory."
        }
    }
}

test {
    useJUnitPlatform {
        if (project.hasProperty('tags')) {
            def tags = project.tags.split(',')
            includeTags(tags)
        }
    }
}